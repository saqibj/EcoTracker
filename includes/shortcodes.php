<?php
if ( ! defined( 'ABSPATH' ) ) {
    exit; // Exit if accessed directly.
}

// Shortcode to display total power generated by all projects
function ecopower_tracker_total_power_shortcode() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'ecopower_projects';
    $projects = $wpdb->get_results( "SELECT * FROM $table_name", ARRAY_A );

    $total_power = 0;

    foreach ( $projects as $project ) {
        $activation_date = new DateTime( $project['date_of_activation'] );
        $now = new DateTime();
        $interval = $activation_date->diff( $now );
        $total_hours = $interval->days * 24 + $interval->h;
        $power_generated = $project['project_cuf'] * $project['generation_capacity'] * $total_hours / 1000; // in MWh
        $total_power += $power_generated;
    }

    return number_format( $total_power, 2 ) . ' MWh';
}
add_shortcode( 'ecopower_tracker_total_power', 'ecopower_tracker_total_power_shortcode' );

// Shortcode to display total CO2 offset by all projects
function ecopower_tracker_total_co2_shortcode() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'ecopower_projects';
    $projects = $wpdb->get_results( "SELECT * FROM $table_name", ARRAY_A );

    $total_co2_offset = 0;

    foreach ( $projects as $project ) {
        $activation_date = new DateTime( $project['date_of_activation'] );
        $now = new DateTime();
        $interval = $activation_date->diff( $now );
        $total_hours = $interval->days * 24 + $interval->h;
        $power_generated = $project['project_cuf'] * $project['generation_capacity'] * $total_hours / 1000; // in MWh
        $co2_offset = $power_generated * 0.85; // 0.85 kg CO2 per kWh
        $total_co2_offset += $co2_offset;
    }

    return number_format( $total_co2_offset, 2 ) . ' kg';
}
add_shortcode( 'ecopower_tracker_total_co2', 'ecopower_tracker_total_co2_shortcode' );

// Shortcode to display all projects in a table
function ecopower_tracker_projects_shortcode() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'ecopower_projects';
    $projects = $wpdb->get_results( "SELECT * FROM $table_name", ARRAY_A );

    ob_start();
    if ( ! empty( $projects ) ) {
        echo '<table class="widefat">';
        echo '<thead><tr><th>' . __( 'Project #', 'ecopower-tracker' ) . '</th><th>' . __( 'Project Company', 'ecopower-tracker' ) . '</th><th>' . __( 'Project Name', 'ecopower-tracker' ) . '</th><th>' . __( 'Project Location', 'ecopower-tracker' ) . '</th><th>' . __( 'Type of Plant', 'ecopower-tracker' ) . '</th><th>' . __( 'Project CUF', 'ecopower-tracker' ) . '</th><th>' . __( 'Generation Capacity (KW)', 'ecopower-tracker' ) . '</th><th>' . __( 'Date of Activation', 'ecopower-tracker' ) . '</th></tr></thead>';
        echo '<tbody>';
        foreach ( $projects as $project ) {
            echo '<tr>';
            echo '<td>' . esc_html( $project['id'] ) . '</td>';
            echo '<td>' . esc_html( $project['project_company'] ) . '</td>';
            echo '<td>' . esc_html( $project['project_name'] ) . '</td>';
            echo '<td>' . esc_html( $project['project_location'] ) . '</td>';
            echo '<td>' . esc_html( $project['type_of_plant'] ) . '</td>';
            echo '<td>' . esc_html( $project['project_cuf'] ) . '</td>';
            echo '<td>' . esc_html( $project['generation_capacity'] ) . '</td>';
            echo '<td>' . esc_html( $project['date_of_activation'] ) . '</td>';
            echo '</tr>';
        }
        echo '</tbody>';
        echo '</table>';
    } else {
        echo '<p>' . __( 'No projects found.', 'ecopower-tracker' ) . '</p>';
    }

    return ob_get_clean();
}
add_shortcode( 'ecopower_tracker_projects', 'ecopower_tracker_projects_shortcode' );

// Shortcode to display total power generated as a number only
function ecopower_tracker_total_power_number_shortcode() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'ecopower_projects';
    $projects = $wpdb->get_results( "SELECT * FROM $table_name", ARRAY_A );

    $total_power = 0;

    foreach ( $projects as $project ) {
        $activation_date = new DateTime( $project['date_of_activation'] );
        $now = new DateTime();
        $interval = $activation_date->diff( $now );
        $total_hours = $interval->days * 24 + $interval->h;
        $power_generated = $project['project_cuf'] * $project['generation_capacity'] * $total_hours / 1000; // in MWh
        $total_power += $power_generated;
    }

    return number_format( $total_power, 2 );
}
add_shortcode( 'ecopower_tracker_total_power_number', 'ecopower_tracker_total_power_number_shortcode' );

// Shortcode to display total CO2 offset as a number only
function ecopower_tracker_total_co2_number_shortcode() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'ecopower_projects';
    $projects = $wpdb->get_results( "SELECT * FROM $table_name", ARRAY_A );

    $total_co2_offset = 0;

    foreach ( $projects as $project ) {
        $activation_date = new DateTime( $project['date_of_activation'] );
        $now = new DateTime();
        $interval = $activation_date->diff( $now );
        $total_hours = $interval->days * 24 + $interval->h;
        $power_generated = $project['project_cuf'] * $project['generation_capacity'] * $total_hours / 1000; // in MWh
        $co2_offset = $power_generated * 0.85; // 0.85 kg CO2 per kWh
        $total_co2_offset += $co2_offset;
    }

    return number_format( $total_co2_offset, 2 );
}
add_shortcode( 'ecopower_tracker_total_co2_number', 'ecopower_tracker_total_co2_number_shortcode' );

// Shortcode to display details for a specific project
function ecopower_tracker_project_shortcode( $atts ) {
    global $wpdb;
    $atts = shortcode_atts( array(
        'project_name' => '',
    ), $atts, 'ecopower_tracker_project' );

    $table_name = $wpdb->prefix . 'ecopower_projects';
    $project = $wpdb->get_row( $wpdb->prepare( "SELECT * FROM $table_name WHERE project_name = %s", $atts['project_name'] ), ARRAY_A );

    if ( $project ) {
        ob_start();
        echo '<table class="widefat">';
        echo '<thead><tr><th>' . __( 'Project Company', 'ecopower-tracker' ) . '</th><th>' . __( 'Project Name', 'ecopower-tracker' ) . '</th><th>' . __( 'Project Location', 'ecopower-tracker' ) . '</th><th>' . __( 'Type of Plant', 'ecopower-tracker' ) . '</th><th>' . __( 'Project CUF', 'ecopower-tracker' ) . '</th><th>' . __( 'Generation Capacity (KW)', 'ecopower-tracker' ) . '</th><th>' . __( 'Date of Activation', 'ecopower-tracker' ) . '</th></tr></thead>';
        echo '<tbody>';
        echo '<tr>';
        echo '<td>' . esc_html( $project['project_company'] ) . '</td>';
        echo '<td>' . esc_html( $project['project_name'] ) . '</td>';
        echo '<td>' . esc_html( $project['project_location'] ) . '</td>';
        echo '<td>' . esc_html( $project['type_of_plant'] ) . '</td>';
        echo '<td>' . esc_html( $project['project_cuf'] ) . '</td>';
        echo '<td>' . esc_html( $project['generation_capacity'] ) . '</td>';
        echo '<td>' . esc_html( $project['date_of_activation'] ) . '</td>';
        echo '</tr>';
        echo '</tbody>';
        echo '</table>';
        return ob_get_clean();
    } else {
        return '<p>' . __( 'Project not found.', 'ecopower-tracker' ) . '</p>';
    }
}
add_shortcode( 'ecopower_tracker_project', 'ecopower_tracker_project_shortcode' );

// Shortcode to display aggregated data for all projects under a specific company
function ecopower_tracker_company_shortcode( $atts ) {
    global $wpdb;
    $atts = shortcode_atts( array(
        'company_name' => '',
    ), $atts, 'ecopower_tracker_company' );

    $table_name = $wpdb->prefix . 'ecopower_projects';
    $projects = $wpdb->get_results( $wpdb->prepare( "SELECT * FROM $table_name WHERE project_company = %s", $atts['company_name'] ), ARRAY_A );

    return ecopower_tracker_aggregate_output( $projects, 'Company: ' . esc_html( $atts['company_name'] ) );
}
add_shortcode( 'ecopower_tracker_company', 'ecopower_tracker_company_shortcode' );

// Shortcode to display aggregated data for all projects at a specific location
function ecopower_tracker_location_shortcode( $atts ) {
    global $wpdb;
    $atts = shortcode_atts( array(
        'location' => '',
    ), $atts, 'ecopower_tracker_location' );

    $table_name = $wpdb->prefix . 'ecopower_projects';
    $projects = $wpdb->get_results( $wpdb->prepare( "SELECT * FROM $table_name WHERE project_location = %s", $atts['location'] ), ARRAY_A );

    return ecopower_tracker_aggregate_output( $projects, 'Location: ' . esc_html( $atts['location'] ) );
}
add_shortcode( 'ecopower_tracker_location', 'ecopower_tracker_location_shortcode' );

// Shortcode to display aggregated data for all projects of a specific type
function ecopower_tracker_type_shortcode( $atts ) {
    global $wpdb;
    $atts = shortcode_atts( array(
        'plant_type' => '',
    ), $atts, 'ecopower_tracker_type' );

    $table_name = $wpdb->prefix . 'ecopower_projects';
    $projects = $wpdb->get_results( $wpdb->prepare( "SELECT * FROM $table_name WHERE type_of_plant = %s", $atts['plant_type'] ), ARRAY_A );

    return ecopower_tracker_aggregate_output( $projects, 'Type: ' . esc_html( $atts['plant_type'] ) );
}
add_shortcode( 'ecopower_tracker_type', 'ecopower_tracker_type_shortcode' );

// Shortcode to display total generation capacity of all projects
function ecopower_tracker_total_capacity_shortcode() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'ecopower_projects';
    $projects = $wpdb->get_results( "SELECT * FROM $table_name", ARRAY_A );

    $total_capacity = 0;

    foreach ( $projects as $project ) {
        $total_capacity += $project['generation_capacity'];
    }

    return number_format( $total_capacity, 2 ) . ' KW';
}
add_shortcode( 'ecopower_tracker_total_capacity', 'ecopower_tracker_total_capacity_shortcode' );

// Shortcode to display generation capacity for a specific project
function ecopower_tracker_project_capacity_shortcode( $atts ) {
    global $wpdb;
    $atts = shortcode_atts( array(
        'project_name' => '',
    ), $atts, 'ecopower_tracker_project_capacity' );

    $table_name = $wpdb->prefix . 'ecopower_projects';
    $project = $wpdb->get_row( $wpdb->prepare( "SELECT * FROM $table_name WHERE project_name = %s", $atts['project_name'] ), ARRAY_A );

    if ( $project ) {
        return number_format( $project['generation_capacity'], 2 ) . ' KW';
    } else {
        return '<p>' . __( 'Project not found.', 'ecopower-tracker' ) . '</p>';
    }
}
add_shortcode( 'ecopower_tracker_project_capacity', 'ecopower_tracker_project_capacity_shortcode' );

// Shortcode to display total generation capacity for all projects under a specific company
function ecopower_tracker_company_capacity_shortcode( $atts ) {
    global $wpdb;
    $atts = shortcode_atts( array(
        'company_name' => '',
    ), $atts, 'ecopower_tracker_company_capacity' );

    $table_name = $wpdb->prefix . 'ecopower_projects';
    $projects = $wpdb->get_results( $wpdb->prepare( "SELECT * FROM $table_name WHERE project_company = %s", $atts['company_name'] ), ARRAY_A );

    $total_capacity = 0;

    foreach ( $projects as $project ) {
        $total_capacity += $project['generation_capacity'];
    }

    return number_format( $total_capacity, 2 ) . ' KW';
}
add_shortcode( 'ecopower_tracker_company_capacity', 'ecopower_tracker_company_capacity_shortcode' );

// Shortcode to display total generation capacity for all projects at a specific location
function ecopower_tracker_location_capacity_shortcode( $atts ) {
    global $wpdb;
    $atts = shortcode_atts( array(
        'location' => '',
    ), $atts, 'ecopower_tracker_location_capacity' );

    $table_name = $wpdb->prefix . 'ecopower_projects';
    $projects = $wpdb->get_results( $wpdb->prepare( "SELECT * FROM $table_name WHERE project_location = %s", $atts['location'] ), ARRAY_A );

    $total_capacity = 0;

    foreach ( $projects as $project ) {
        $total_capacity += $project['generation_capacity'];
    }

    return number_format( $total_capacity, 2 ) . ' KW';
}
add_shortcode( 'ecopower_tracker_location_capacity', 'ecopower_tracker_location_capacity_shortcode' );

// Shortcode to display total generation capacity for all projects of a specific type
function ecopower_tracker_type_capacity_shortcode( $atts ) {
    global $wpdb;
    $atts = shortcode_atts( array(
        'plant_type' => '',
    ), $atts, 'ecopower_tracker_type_capacity' );

    $table_name = $wpdb->prefix . 'ecopower_projects';
    $projects = $wpdb->get_results( $wpdb->prepare( "SELECT * FROM $table_name WHERE type_of_plant = %s", $atts['plant_type'] ), ARRAY_A );

    $total_capacity = 0;

    foreach ( $projects as $project ) {
        $total_capacity += $project['generation_capacity'];
    }

    return number_format( $total_capacity, 2 ) . ' KW';
}
add_shortcode( 'ecopower_tracker_type_capacity', 'ecopower_tracker_type_capacity_shortcode' );

// Helper function to aggregate project data and output
function ecopower_tracker_aggregate_output( $projects, $group_title ) {
    $total_power = 0;
    $total_co2_offset = 0;
    $total_capacity = 0;

    foreach ( $projects as $project ) {
        $activation_date = new DateTime( $project['date_of_activation'] );
        $now = new DateTime();
        $interval = $activation_date->diff( $now );
        $total_hours = $interval->days * 24 + $interval->h;
        $power_generated = $project['project_cuf'] * $project['generation_capacity'] * $total_hours / 1000; // in MWh
        $co2_offset = $power_generated * 0.85; // 0.85 kg CO2 per kWh
        $total_power += $power_generated;
        $total_co2_offset += $co2_offset;
        $total_capacity += $project['generation_capacity'];
    }

    ob_start();
    echo '<h2>' . esc_html( $group_title ) . '</h2>';
    echo '<p>' . __( 'Total Power Generated:', 'ecopower-tracker' ) . ' ' . number_format( $total_power, 2 ) . ' MWh</p>';
    echo '<p>' . __( 'Total CO2 Offset:', 'ecopower-tracker' ) . ' ' . number_format( $total_co2_offset, 2 ) . ' kg</p>';
    echo '<p>' . __( 'Total Generation Capacity:', 'ecopower-tracker' ) . ' ' . number_format( $total_capacity, 2 ) . ' KW</p>';

    return ob_get_clean();
}
?>